return {
  "saghen/blink.cmp",

  dependencies = {
    "mikavilpas/blink-ripgrep.nvim",
    "bydlw98/blink-cmp-env",
    "Kaiser-Yang/blink-cmp-avante",
  },

  opts = {

    appearance = {
      --
    },

    fuzzy = {
      implementation = "lua",
    },

    signature = {
      enabled = true,
    },

    completion = {
      accept = {
        -- experimental auto-brackets support
        auto_brackets = {
          enabled = false,
        },
      },
      menu = {
        draw = {
          treesitter = { "lsp" },
        },
      },
      documentation = {
        auto_show = true,
        auto_show_delay_ms = 200,
      },
      ghost_text = {
        enabled = vim.g.ai_cmp,
      },
    },

    sources = {
      -- adding any nvim-cmp sources here will enable them
      -- with blink.compat
      compat = {},
      default = { "avante", "lsp", "path", "snippets", "buffer", "env" }, -- ripgrep

      providers = {
        avante = {
          module = "blink-cmp-avante",
          name = "Avante",
          opts = {},
        },
        env = {
          name = "Env",
          module = "blink-cmp-env",
          opts = {
            item_kind = require("blink.cmp.types").CompletionItemKind.Variable,
            show_braces = false,
            show_documentation_window = true,
          },
        },
        ripgrep = {
          module = "blink-ripgrep",
          name = "Ripgrep",
          ---@module "blink-ripgrep"
          ---@type blink-ripgrep.Options
          opts = {
            prefix_min_len = 3,
            context_size = 5,
            max_filesize = "2M",
            project_root_marker = { "composer.json", "package.json", ".git" },
            project_root_fallback = true,
          },
        },
      },
    },
  },
}
